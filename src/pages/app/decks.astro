---
import AppLayout from "@/layouts/AppLayout.astro";
import DecksView from "@/components/decks/DecksView";
import * as DeckService from "@/lib/services/deck.service";

export const prerender = false;

// Get authenticated user from locals (set by middleware)
const user = Astro.locals.user;

// Defense in depth - redirect if user is not authenticated
if (!user) {
  return Astro.redirect("/login");
}

const userId = user.id;
const supabase = Astro.locals.supabase;

// Fetch decks server-side for better performance and SEO
let initialData;
let fetchError = false;

try {
  initialData = await DeckService.getDecks(supabase, userId, 1, 20);
} catch (error) {
  // eslint-disable-next-line no-console
  console.error("Failed to fetch decks:", error);
  fetchError = true;
  // Provide empty data as fallback
  initialData = {
    data: [],
    pagination: {
      currentPage: 1,
      totalPages: 0,
      totalItems: 0,
    },
  };
}
---

<AppLayout title="Moje Talie">
  <DecksView client:load initialData={initialData} fetchError={fetchError} />
</AppLayout>
