---
import AppLayout from "@/layouts/AppLayout.astro";
import { GenerationClientComponent } from "@/components/generation/GenerationClientComponent";

export const prerender = false;

// Get authenticated user from locals (set by middleware)
const user = Astro.locals.user;

// Defense in depth - redirect if user is not authenticated
if (!user) {
  return Astro.redirect("/login");
}

const { deckId } = Astro.params;

// Basic validation - deckId should be present and be a valid UUID format
if (!deckId || typeof deckId !== "string") {
  return Astro.redirect("/app/decks");
}

const supabase = Astro.locals.supabase;

// Check if deck exists and belongs to user
const { data: deck, error: deckError } = await supabase
  .from("decks")
  .select("id, name")
  .eq("id", deckId)
  .eq("user_id", user.id)
  .single();

if (deckError || !deck) {
  return Astro.redirect("/app/decks");
}

const pageTitle = `Generuj fiszki AI - ${deck.name}`;
---

<AppLayout title={pageTitle} deckName={deck.name}>
  <GenerationClientComponent client:load deckId={deckId} />
</AppLayout>
